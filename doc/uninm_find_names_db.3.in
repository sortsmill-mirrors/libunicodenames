.Dd August 7, 2013
.\"
.\" Copyright (C) 2013 Khaled Hosny and Barry Schwartz
.\"
.\" This file is part of LibUnicodeNames.
.\" 
.\" LibUnicodeNames is free software: you can redistribute it and/or
.\" modify it under the terms of the GNU Lesser General Public License
.\" as published by the Free Software Foundation, either version 3 of
.\" the License, or (at your option) any later version.
.\" 
.\" LibUnicodeNames is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" Lesser General Public License for more details.
.\" 
.\" You should have received a copy of the GNU Lesser General Public
.\" License along with LibUnicodeNames.  If not, see
.\" <http://www.gnu.org/licenses/>.
.\"
.\" This manpage is written in mdoc. See groff_mdoc(7).
.\"
.Dt UNINM_FIND_NAMES_DB 3
.Os
.Sh NAME
.Nm uninm_find_names_db ,
.Nm uninm_names_db_open ,
.Nm uninm_names_db_close ,
.Nm uninm_name ,
.Nm uninm_annotation
.Nd retrieve names and annotations of Unicode code points
.Sh LIBRARY
LibUnicodeNames Library (libunicodenames, -lunicodenames)
.Sh SYNOPSIS
.In libunicodenames.h
.Ft "char *"
.Fn uninm_find_names_db "const char *locale_base"
.Ft uninm_names_db
.Fn uninm_names_db_open "const char *filename"
.Ft void
.Fn uninm_names_db_close "uninm_names_db handle"
.Ft "const char *"
.Fn uninm_name "uninm_names_db handle" "unsigned int codepoint"
.Ft "const char *"
.Fn uninm_annotation "uninm_names_db handle" "unsigned int codepoint"
.Sh DESCRIPTION
The
.Fn uninm_find_names_db
function returns the path of the names database for the current
locale. The caller should call
.Fn free 3
on the string when done with it.
If
.Pa locale_base
is not
.Dv NULL ,
then use it as the base directory for MO (compiled gettext) files;
otherwise use the compiled-in locale directory.
Databases accessible through the compiled-in directory are
.Pa "%%pkgdatadir%%/en.names-db"
and
.Pa "%%pkgdatadir%%/fr.names-db" ,
corresponding to English and French locales, respectively.
.Pp
The
.Fn uninm_names_db_open
function open a names database, given its path, returning an opaque
pointer to act as a handle.
.Pp
The
.Fn uninm_names_db_close
closes a names database, given its handle.  Afterwards the value of
.Pa handle
is meaningless.
.Pp
The
.Fn uninm_name
and
.Fn uninm_annotation
functions return, respectively, name and annotation strings associated
with a given Unicode code point. The
.Pa handle
parameter must refer to an open names database. The caller must not
try to free the returned string.
.\" .Sh IMPLEMENTATION NOTES
.Sh RETURN VALUES
On success, the
.Fn uninm_find_names_db
function returns a pointer to a null-terminated string, which
eventually should be freed by calling
.Fn free 3 .
On failure,
.Fn uninm_find_names_db
returns
.Dv NULL .
.Pp
On success, the
.Fn uninm_names_db_open
function returns an open handle for a names database. On failure, it returns
.Dv NULL .
.Pp
The
.Fn uninm_name
and
.Fn uninm_annotation
functions return a pointer to a null-terminated string, if there is a
database entry corresponding to the given code point; otherwise they
return
.Dv NULL .
The caller
.Em "must not"
call
.Fn free 3
with the string.
.Sh FILES
.Pa "%%pkgdatadir%%/en.names-db" ,
.Pa "%%pkgdatadir%%/fr.names-db"
.Sh EXAMPLE
The following program prints names and annotations corresponding to
the code points between 0 and 999, inclusive.
.Bd -literal -offset indent
#include <libunicodenames.h>
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>

int
main (int argc, char **argv)
{
  unsigned int codepoint;
  char *dbfile;
  uninm_names_db db;
  const char *name, *annot;

  setlocale (LC_ALL, "");
  dbfile = uninm_find_names_db (NULL);
  if (dbfile == NULL)
    exit (1);
  db = uninm_names_db_open (dbfile);
  free (dbfile);
  if (db == NULL)
    exit (1);
  for (codepoint = 0; codepoint <= 999; codepoint++)
    {
      name = uninm_name (db, codepoint);
      annot = uninm_annotation (db, codepoint);
      name = (name == NULL) ? "\-\-none\-\-" : name;
      annot = (annot == NULL) ? "\-\-none\-\-" : annot;
      printf ("\-\-\\ncode point: %u\\nname: %s\\nannotation:\\n%s\\n",
	      codepoint, name, annot);
    }
  uninm_names_db_close (db);
}
.Ed
.\" .Sh ERRORS
.Sh SEE ALSO
.\" A make-libunicodenames-db(1) reference is inserted by the Makefile
 \" if that manpage is made.
.Xr uninm_find_blocks_db 3 %%make_libunicodenames_db_reference%%
.\" .Sh STANDARDS
.\" .Sh HISTORY
.Sh AUTHORS
.An Barry Schwartz
.Sh BUGS
The French translation of the Unicode names list is based on an older
Unicode standard.
